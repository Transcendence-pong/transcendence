name: ft_transcendece

services:
  database:
    container_name: tr-database
    image: postgres:alpine
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - tr-network
    expose:
      - 5432
    healthcheck:
      # pg_isready might be configured with more arguments (host, port, user)
      test: ["CMD", "pg_isready", "-d", "$DB_NAME"]
      interval: 1s
      timeout: 8s
      start_period: 4s
      start_interval: 2s
      retries: 4
    environment:
      - POSTGRES_DB=${DB_NAME?err}
      - POSTGRES_USER=${DB_USER?err}
      - POSTGRES_PASSWORD=${DB_PASSWORD?err}
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: on-failure:3

  backend:
    container_name: tr-backend
    image: python:tr-custom
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    volumes:
      - ./..:/project:rw
    working_dir: /project
    networks:
      - tr-network
    expose:
      - 8001
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_NAME=${DB_NAME?err}
      - DATABASE_USER=${DB_USER?err}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_PORT=5432
    restart: on-failure:3

  server:
    container_name: tr-server
    image: nginx:alpine
    volumes:
      - ./server/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./server/conf.d/:/etc/nginx/conf.d/:ro
      - ./../app:/usr/share/nginx/html/app/:ro
      - ./../static:/usr/share/nginx/html/static/:ro
    networks:
      - tr-network
    ports:
      - 9000:9000
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://tr-server:9000"]
      interval: 10s
      timeout: 8s
      start_period: 4s
      start_interval: 2s
      retries: 4
    depends_on:
      backend:
        condition: service_started
    restart: on-failure:3

volumes:
  db:
    name: tr-data
    driver: local
    driver_opts:
      type: none
      o: bind
      # path relative to the file docker-compose.yml's directory
      device: "./database/data"

networks:
  tr-network:
    name: "tr-network"
